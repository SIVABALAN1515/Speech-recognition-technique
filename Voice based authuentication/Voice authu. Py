import os
import librosa
import numpy as np
import speech_recognition as sr
import pyttsx3
from scipy.spatial.distance import cosine
import datetime
import csv

RECORDING_PATH = "voice_sample.wav"
ENROLLMENT_PATH = "enrolled_voice.wav"
LOG_FILE = "auth_log.csv"
SIMILARITY_THRESHOLD = 0.3  # Lower means stricter

def speak(text):
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

def record_voice(filename):
    r = sr.Recognizer()
    with sr.Microphone() as source:
        speak("Please speak now.")
        print("🎙️ Recording...")
        r.adjust_for_ambient_noise(source)
        audio = r.listen(source)
        with open(filename, "wb") as f:
            f.write(audio.get_wav_data())
        print(f"✅ Recorded: {filename}")

def extract_mfcc(file_path):
    y, sr_rate = librosa.load(file_path)
    mfcc = librosa.feature.mfcc(y=y, sr=sr_rate, n_mfcc=13)
    return np.mean(mfcc.T, axis=0)

def authenticate():
    if not os.path.exists(ENROLLMENT_PATH):
        speak("No enrolled voice found. Please enroll first.")
        return

    record_voice(RECORDING_PATH)

    enrolled_mfcc = extract_mfcc(ENROLLMENT_PATH)
    recorded_mfcc = extract_mfcc(RECORDING_PATH)

    similarity = 1 - cosine(enrolled_mfcc, recorded_mfcc)
    is_authenticated = similarity > (1 - SIMILARITY_THRESHOLD)

    log_attempt(similarity, is_authenticated)

    if is_authenticated:
        speak("Authentication successful.")
        print("🔓 Access granted.")
    else:
        speak("Authentication failed.")
        print("🚫 Access denied.")

def enroll():
    speak("Recording enrollment voice sample.")
    record_voice(ENROLLMENT_PATH)
    speak("Voice enrolled successfully.")

def log_attempt(similarity, success):
    with open(LOG_FILE, mode="a", newline="") as f:
        writer = csv.writer(f)
        if os.stat(LOG_FILE).st_size == 0:
            writer.writerow(["Timestamp", "Similarity", "Success"])
        writer.writerow([datetime.datetime.now(), f"{similarity:.4f}", success])

def main():
    speak("Welcome to voice authentication system.")
    print("1. Enroll voice\n2. Authenticate\n3. Exit")
    choice = input("Select an option: ")

    if choice == "1":
        enroll()
    elif choice == "2":
        authenticate()
    else:
        speak("Exiting.")
        exit()

if __name__ == "__main__":
    main()
